<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>被遗忘的天梯赛</title>
      <link href="/2022/04/17/%E9%81%97%E5%BF%98%E7%9A%84%E5%A4%A9%E6%A2%AF%E8%B5%9B/"/>
      <url>/2022/04/17/%E9%81%97%E5%BF%98%E7%9A%84%E5%A4%A9%E6%A2%AF%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>蓝桥寄了, 太久没学算法了, 不知不觉天梯赛了</p></blockquote><h2 id="题目列表"><a href="#题目列表" class="headerlink" title="题目列表"></a>题目列表</h2><h3 id="L1-001-Hello-World-5-分"><a href="#L1-001-Hello-World-5-分" class="headerlink" title="L1-001 Hello World (5 分)"></a>L1-001 Hello World (5 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; <span class="hljs-string">&quot;Hello World!&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="L1-002-打印沙漏-20-分"><a href="#L1-002-打印沙漏-20-分" class="headerlink" title="L1-002 打印沙漏 (20 分)"></a>L1-002 打印沙漏 (20 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> n;<br><span class="hljs-type">char</span> c;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>    cin &gt;&gt; n &gt;&gt; c;<br>    <br>    <span class="hljs-type">int</span> pos = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; ; ++ i, ++ pos)<br>        <span class="hljs-keyword">if</span>(i * i * <span class="hljs-number">2</span> - <span class="hljs-number">1</span> &gt; n)<br>            <span class="hljs-keyword">break</span>;<br><br>    <span class="hljs-type">int</span> sum = pos * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>; <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= pos; ++ i) <span class="hljs-comment">// 上</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= sum; ++ j)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(j &gt;= i <span class="hljs-keyword">and</span> j &lt;= sum - i + <span class="hljs-number">1</span>)<br>                cout &lt;&lt; c;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j &lt; i)<br>                cout &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = pos - <span class="hljs-number">1</span>; i; -- i) <span class="hljs-comment">// 下</span><br>    &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= sum; ++ j)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(j &gt;= i <span class="hljs-keyword">and</span> j &lt;= sum - i + <span class="hljs-number">1</span>)<br>                cout &lt;&lt; c;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(j &lt; i)<br>                cout &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br>        cout &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>    cout &lt;&lt; n - pos * pos * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-003-个位数统计-15-分"><a href="#L1-003-个位数统计-15-分" class="headerlink" title="L1-003 个位数统计 (15 分)"></a>L1-003 个位数统计 (15 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>string s;<br>map&lt;<span class="hljs-type">char</span>, <span class="hljs-type">int</span>&gt; mp;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; s;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span>&amp; c : s)<br>        ++ mp[c];<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span>&amp; [k, v] : mp)<br>        cout &lt;&lt; k &lt;&lt; <span class="hljs-string">&quot;:&quot;</span> &lt;&lt; v &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-004-计算摄氏温度-5-分"><a href="#L1-004-计算摄氏温度-5-分" class="headerlink" title="L1-004 计算摄氏温度 (5 分)"></a>L1-004 计算摄氏温度 (5 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; <span class="hljs-string">&quot;Celsius = &quot;</span> &lt;&lt; <span class="hljs-number">5</span> * (F - <span class="hljs-number">32</span>) / <span class="hljs-number">9</span>;<br></code></pre></td></tr></table></figure><h3 id="L1-005-考试座位号-15-分"><a href="#L1-005-考试座位号-15-分" class="headerlink" title="L1-005 考试座位号 (15 分)"></a>L1-005 考试座位号 (15 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>map&lt;<span class="hljs-type">int</span>, pair&lt;string, <span class="hljs-type">int</span>&gt; &gt; mp; <br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++ i)<br>    &#123;<br>        string s; <br>        <span class="hljs-type">int</span> u, v; <span class="hljs-comment">// 试机座位号, 考试座位号</span><br>        cin &gt;&gt; s &gt;&gt; u &gt;&gt; v;<br>        mp[u] = &#123;s, v&#125;;<br>    &#125;<br><br>    <span class="hljs-type">int</span> m;<br>    cin &gt;&gt; m;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; ++ i)<br>    &#123;<br>        <span class="hljs-type">int</span> u;<br>        cin &gt;&gt; u;<br>        cout &lt;&lt; mp[u].first &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; mp[u].second &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-006-连续因子-20-分"><a href="#L1-006-连续因子-20-分" class="headerlink" title="L1-006 连续因子 (20 分)"></a>L1-006 连续因子 (20 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; res;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    set&lt;<span class="hljs-type">int</span>&gt; st;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n / i; ++ i)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(n % i == <span class="hljs-number">0</span>)<br>        &#123;<br>            st.<span class="hljs-built_in">insert</span>(i);<br>            <span class="hljs-keyword">if</span>(i != n / i)<br>                st.<span class="hljs-built_in">insert</span>(n / i);<br>        &#125;<br>    &#125;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">v</span><span class="hljs-params">(st.begin(), st.end())</span></span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; v.<span class="hljs-built_in">size</span>(); ++ i)<br>    &#123;<br>        <span class="hljs-type">int</span> tmpn = n;<br>        tmpn /= v[i];<br>        <span class="hljs-type">int</span> j = v[i] + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(tmpn <span class="hljs-keyword">and</span> tmpn % j == <span class="hljs-number">0</span>)<br>            tmpn /= j, ++ j;<br>        <span class="hljs-keyword">if</span>(j - v[i] &gt; res.first)<br>            res = &#123;j - v[i], v[i]&#125;;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(res.first)<br>    &#123;<br>        cout &lt;&lt; res.first &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; res.first; ++ i)<br>            cout &lt;&lt; res.second + i &lt;&lt; <span class="hljs-string">&quot;*\n&quot;</span>[i == res.first - <span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;1\n&quot;</span> &lt;&lt; n;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-007-念数字-10-分"><a href="#L1-007-念数字-10-分" class="headerlink" title="L1-007 念数字 (10 分)"></a>L1-007 念数字 (10 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>string s;<br>map&lt;<span class="hljs-type">int</span>, string&gt; mp&#123;<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-string">&quot;ling&quot;</span>&#125;, &#123;<span class="hljs-number">1</span>, <span class="hljs-string">&quot;yi&quot;</span>&#125;, &#123;<span class="hljs-number">2</span>, <span class="hljs-string">&quot;er&quot;</span>&#125;,<br>    &#123;<span class="hljs-number">3</span>, <span class="hljs-string">&quot;san&quot;</span>&#125;, &#123;<span class="hljs-number">4</span>, <span class="hljs-string">&quot;si&quot;</span>&#125;, &#123;<span class="hljs-number">5</span>, <span class="hljs-string">&quot;wu&quot;</span>&#125;,<br>    &#123;<span class="hljs-number">6</span>, <span class="hljs-string">&quot;liu&quot;</span>&#125;, &#123;<span class="hljs-number">7</span>, <span class="hljs-string">&quot;qi&quot;</span>&#125;, &#123;<span class="hljs-number">8</span>, <span class="hljs-string">&quot;ba&quot;</span>&#125;, &#123;<span class="hljs-number">9</span>, <span class="hljs-string">&quot;jiu&quot;</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; s;<br><br>    <span class="hljs-type">int</span> len = s.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len; ++ i)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(s[i] != <span class="hljs-string">&#x27;-&#x27;</span>)<br>            cout &lt;&lt; mp[s[i] - <span class="hljs-string">&#x27;0&#x27;</span>] &lt;&lt; <span class="hljs-string">&quot; \n&quot;</span>[i == len - <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">else</span><br>            cout &lt;&lt; <span class="hljs-string">&quot;fu &quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-008-求整数段和-10-分"><a href="#L1-008-求整数段和-10-分" class="headerlink" title="L1-008 求整数段和 (10 分)"></a>L1-008 求整数段和 (10 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a, b;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);<br><br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = a, j = <span class="hljs-number">0</span>; i &lt;= b; ++ i, ++ j)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(j == <span class="hljs-number">5</span>)<br>            j = <span class="hljs-number">0</span>, <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5d&quot;</span>, i);<br>        sum += i;<br>    &#125;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nSum = %d&quot;</span>, sum);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-009-N个数求和-20-分"><a href="#L1-009-N个数求和-20-分" class="headerlink" title="L1-009 N个数求和 (20 分)"></a>L1-009 N个数求和 (20 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> LL;<br><br><span class="hljs-type">int</span> n;<br>LL fz, fm = <span class="hljs-number">1</span>; <span class="hljs-comment">// 分子，分母</span><br><br><span class="hljs-function">LL <span class="hljs-title">gcd</span><span class="hljs-params">(LL u, LL v)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> v ? <span class="hljs-built_in">gcd</span>(v, u % v) : u;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i)<br>    &#123;<br>        LL a, b;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld/%lld&quot;</span>, &amp;a, &amp;b);<br>        <br>        fz = fz * b + a * fm;<br>        fm = fm * b;<br>        <span class="hljs-comment">//cout &lt;&lt; fm &lt;&lt; &quot; &quot; &lt;&lt; fz &lt;&lt; &quot;\n&quot;;</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">gcd</span>(fz, fm))<br>        &#123;<br>            LL t = <span class="hljs-built_in">gcd</span>(fz, fm);<br>            fz = fz / t;<br>            fm = fm / t;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">not</span> fz)<br>        cout &lt;&lt; <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(fz / fm)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(fz % fm)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld %lld/%lld&quot;</span>, fz / fm, fz % fm, fm);<br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld&quot;</span>, fz / fm);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld/%lld&quot;</span>, fz, fm);<br><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-010-比较大小-10-分"><a href="#L1-010-比较大小-10-分" class="headerlink" title="L1-010 比较大小 (10 分)"></a>L1-010 比较大小 (10 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; <span class="hljs-built_in">min</span>(&#123;a, b, c&#125;) &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; (a ^ b ^ c ^ <span class="hljs-built_in">min</span>(&#123;a, b, c&#125;) ^ <span class="hljs-built_in">max</span>(&#123;a, b, c&#125;)) &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-built_in">max</span>(&#123;a, b, c&#125;);<br></code></pre></td></tr></table></figure><h3 id="L1-011-A-B-20-分"><a href="#L1-011-A-B-20-分" class="headerlink" title="L1-011 A-B (20 分)"></a>L1-011 A-B (20 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>string s, p;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">getline</span>(cin, s);<br>    <span class="hljs-built_in">getline</span>(cin, p);<br><br>    <span class="hljs-function">set&lt;<span class="hljs-type">char</span>&gt; <span class="hljs-title">st</span><span class="hljs-params">(p.begin(), p.end())</span></span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span>&amp; c : s)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(st.<span class="hljs-built_in">count</span>(c))<br>            <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">else</span><br>            cout &lt;&lt; c;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-012-计算指数-5-分"><a href="#L1-012-计算指数-5-分" class="headerlink" title="L1-012 计算指数 (5 分)"></a>L1-012 计算指数 (5 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; <span class="hljs-string">&quot;2^&quot;</span> &lt;&lt; n &lt;&lt; <span class="hljs-string">&quot; = &quot;</span> &lt;&lt; <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, n);<br></code></pre></td></tr></table></figure><h3 id="L1-013-计算阶乘和-10-分"><a href="#L1-013-计算阶乘和-10-分" class="headerlink" title="L1-013 计算阶乘和 (10 分)"></a>L1-013 计算阶乘和 (10 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; ++ i)<br>&#123;<br>    <span class="hljs-type">int</span> cur = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= i; ++ j)<br>        cur *= j;<br>    sum += cur;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-014-简单题-5-分"><a href="#L1-014-简单题-5-分" class="headerlink" title="L1-014 简单题 (5 分)"></a>L1-014 简单题 (5 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">cout &lt;&lt; <span class="hljs-string">&quot;This is a simple problem.&quot;</span>;<br></code></pre></td></tr></table></figure><h3 id="L1-015-跟奥巴马一起画方块-15-分"><a href="#L1-015-跟奥巴马一起画方块-15-分" class="headerlink" title="L1-015 跟奥巴马一起画方块 (15 分)"></a>L1-015 跟奥巴马一起画方块 (15 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= (n + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>; ++ i)<br>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= n; ++ j)<br>    &#123;<br>        cout &lt;&lt; c;<br>    &#125;<br>    cout &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-016-查验身份证-15-分"><a href="#L1-016-查验身份证-15-分" class="headerlink" title="L1-016 查验身份证 (15 分)"></a>L1-016 查验身份证 (15 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> n;<br><span class="hljs-type">int</span> a[] = &#123;<span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>&#125;;<br>map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">char</span>&gt; mp &#123;<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;1&#x27;</span>&#125;, &#123;<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;0&#x27;</span>&#125;, &#123;<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;X&#x27;</span>&#125;,<br>    &#123;<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;9&#x27;</span>&#125;, &#123;<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;8&#x27;</span>&#125;, &#123;<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;7&#x27;</span>&#125;,<br>    &#123;<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;6&#x27;</span>&#125;, &#123;<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;5&#x27;</span>&#125;, &#123;<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;4&#x27;</span>&#125;,<br>    &#123;<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;3&#x27;</span>&#125;, &#123;<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;2&#x27;</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin &gt;&gt; n;<br><br>    <span class="hljs-type">bool</span> f = <span class="hljs-literal">true</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++ i)<br>    &#123;<br>        string s;<br>        cin &gt;&gt; s;<br><br>        <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-type">bool</span> flag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">17</span>; ++ i)<br>        &#123;   <br>            <span class="hljs-keyword">if</span>(<span class="hljs-keyword">not</span> <span class="hljs-built_in">isdigit</span>(s[i]))<br>            &#123;<br>                flag = <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            sum += a[i] * (s[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>        &#125;<br><br>        sum %= <span class="hljs-number">11</span>;<br><br>        <span class="hljs-keyword">if</span>(mp[sum] != s[<span class="hljs-number">17</span>])<br>            flag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span>(flag)<br>            f = <span class="hljs-literal">false</span>, cout &lt;&lt; s &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(f)<br>        cout &lt;&lt; <span class="hljs-string">&quot;All passed&quot;</span>;<br>        <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="L1-017-到底有多二-15-分"><a href="#L1-017-到底有多二-15-分" class="headerlink" title="L1-017 到底有多二 (15 分)"></a>L1-017 到底有多二 (15 分)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> sum;<br>string s;<br><span class="hljs-type">double</span> res = <span class="hljs-number">1.0</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout &lt;&lt; fixed &lt;&lt; <span class="hljs-built_in">setprecision</span>(<span class="hljs-number">2</span>);<br><br>    cin &gt;&gt; s;<br>    <span class="hljs-type">int</span> len = s.<span class="hljs-built_in">size</span>();<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span>&amp; c : s)<br>        <span class="hljs-keyword">if</span>(c == <span class="hljs-string">&#x27;2&#x27;</span>)<br>            ++ sum;<br>    <br>    <span class="hljs-keyword">if</span>((<span class="hljs-type">int</span>)s[len - <span class="hljs-number">1</span>] % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)<br>        res *= <span class="hljs-number">2</span>;<br>    <br>    <span class="hljs-keyword">if</span>(s[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;-&#x27;</span>)<br>        res *= <span class="hljs-number">1.5</span>, -- len;<br><br>    res *= sum * <span class="hljs-number">1.0</span> / len;<br><br>    cout &lt;&lt; res * <span class="hljs-number">100</span> &lt;&lt; <span class="hljs-string">&quot;%&quot;</span>; <br>        <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/14/hello-world/"/>
      <url>/2022/04/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">10</span>; ++ i)<br>    cout &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
